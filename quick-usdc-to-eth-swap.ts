#!/usr/bin/env ts-node

import 'dotenv/config';
import { baseUniswapService, UNISWAP_BASE_CONFIG } from "./src/services/uniswap";
import { getSavedWalletSets } from "./src/services/wallet";
import { getWalletBalance } from "./src/services/circle";

async function realUSDCToETHSwap() {
  console.log('üî• SWAP R√âEL USDC ‚Üí ETH sur Base Sepolia (Uniswap)');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');

  try {
    // Utiliser directement le wallet set "newSet"
    console.log('\nüëõ Recherche du wallet set "newSet"...');
    const walletSets = getSavedWalletSets();
    const newSetWallet = walletSets.find(ws => ws.walletSetName === 'newSet');
    
    if (!newSetWallet) {
      console.log('‚ùå Wallet set "newSet" non trouv√©');
      console.log('üí° Cr√©ez d\'abord un wallet set nomm√© "newSet" avec un wallet Base');
      return;
    }

    const baseWallets = newSetWallet.wallets.filter(w => 
      w.blockchain === 'BASE-SEPOLIA' || w.blockchain.includes('BASE')
    );
    
    if (baseWallets.length === 0) {
      console.log('‚ùå Aucun wallet Base trouv√© dans newSet');
      console.log('üí° Ajoutez un wallet Base Sepolia √† votre wallet set "newSet"');
      return;
    }

    const baseWallet = baseWallets[0];
    console.log(`‚úÖ Wallet trouv√©: ${baseWallet.address}`);
    console.log(`üì± Blockchain: ${baseWallet.blockchain}`);

    // V√©rifier la balance USDC
    console.log('\nüí∞ V√©rification de la balance USDC...');
    const balances = await getWalletBalance(baseWallet.id);
    
    if (!balances || balances.length === 0) {
      console.log('‚ùå Impossible de r√©cup√©rer les balances');
      return;
    }

    console.log('üí∞ Balances disponibles:');
    balances.forEach(balance => {
      if (parseFloat(balance.amount) > 0) {
        console.log(`   ‚Ä¢ ${balance.token.symbol}: ${balance.amount}`);
      }
    });

    const usdcBalance = balances.find(b => 
      b.token.symbol === 'USDC' || b.token.name?.toLowerCase().includes('usd coin')
    );

    if (!usdcBalance || parseFloat(usdcBalance.amount) === 0) {
      console.log('\n‚ùå Aucun USDC trouv√© dans ce wallet');
      console.log('üí° Solutions:');
      console.log('   1. Transf√©rez des USDC vers ce wallet sur Base Sepolia');
      console.log('   2. Utilisez un faucet Base Sepolia pour obtenir des tokens de test');
      console.log('   3. Bridgez des USDC depuis un autre r√©seau');
      return;
    }

    console.log(`\n‚úÖ Balance USDC: ${usdcBalance.amount} USDC`);

    // Configuration du swap
    const usdcAmount = "10"; // 10 USDC par d√©faut
    const slippage = 1; // 1% slippage
    const poolFee = UNISWAP_BASE_CONFIG.POOL_FEES.MEDIUM; // 0.3%

    if (parseFloat(usdcBalance.amount) < parseFloat(usdcAmount)) {
      console.log(`‚ùå Balance insuffisante. Requis: ${usdcAmount} USDC, Disponible: ${usdcBalance.amount} USDC`);
      return;
    }

    // Obtenir un quote
    console.log('\nüìä Obtention du quote Uniswap...');
    const price = await baseUniswapService.getUSDCToETHPrice(usdcAmount, poolFee);
    
    if (!price) {
      console.log('‚ùå Impossible d\'obtenir le prix depuis Uniswap');
      console.log('üí° V√©rifiez:');
      console.log('   1. La connectivit√© r√©seau');
      console.log('   2. Les adresses des contrats Uniswap');
      console.log('   3. L\'existence du pool USDC/ETH sur Base Sepolia');
      return;
    }

    console.log('\nüí± D√©tails du swap:');
    console.log(`   üîÑ Direction: USDC ‚Üí ETH`);
    console.log(`   üí∞ Vous donnez: ${price.usdcAmount} USDC`);
    console.log(`   üí∞ Vous recevez: ~${price.ethAmount.toFixed(6)} ETH`);
    console.log(`   üìà Taux: ${price.rateFormatted}`);
    console.log(`   ‚ö° Slippage: ${slippage}%`);
    console.log(`   üèä‚Äç‚ôÄÔ∏è Pool fee: ${poolFee / 10000}%`);
    console.log(`   üåê R√©seau: Base Sepolia`);
    console.log(`   ü¶Ñ DEX: Uniswap V3`);
    console.log(`ü¶Ñ Swap Router: ${UNISWAP_BASE_CONFIG.SWAP_ROUTER}`);

    console.log('\n‚ö†Ô∏è  ATTENTION: Vous allez faire un VRAI swap avec de vrais tokens!');
    console.log('üí° D√©commentez la section ci-dessous pour confirmer et ex√©cuter:');

    /*
    // D√âCOMMENTEZ CES LIGNES POUR EX√âCUTER LE SWAP R√âEL:
    
    console.log('\nüöÄ Ex√©cution du swap USDC ‚Üí ETH...');
    const result = await baseUniswapService.swapUSDCToETH({
      walletId: baseWallet.id,
      usdcAmount: usdcAmount,
      slippage: slippage,
      walletAddress: baseWallet.address,
      poolFee: poolFee
    });

    if (result.success) {
      console.log('\nüéâ SWAP R√âUSSI! üéâ');
      console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
      console.log(`üîó Transaction ID: ${result.transactionId}`);
      console.log(`üí∞ ETH re√ßu: ~${result.expectedETH} ETH`);
      console.log(`üîç Base Sepolia Scan: ${result.explorerUrl}`);
      console.log('\nüìä R√©sum√© de la transaction:');
      console.log(`   ‚Ä¢ Wallet: ${baseWallet.address}`);
      console.log(`   ‚Ä¢ Swap: ${usdcAmount} USDC ‚Üí ~${result.expectedETH} ETH`);
      console.log(`   ‚Ä¢ Slippage: ${slippage}%`);
      console.log(`   ‚Ä¢ Pool fee: ${poolFee / 10000}%`);
      console.log(`   ‚Ä¢ DEX: Uniswap V3 sur Base Sepolia`);
      console.log('\nüîó Liens utiles:');
      console.log(`   ‚Ä¢ Transaction: ${result.explorerUrl}`);
      console.log(`   ‚Ä¢ Wallet: ${UNISWAP_BASE_CONFIG.EXPLORER}/address/${baseWallet.address}`);
      console.log('\nüí° Votre swap a √©t√© ex√©cut√© avec succ√®s!');
    } else {
      console.log('\n‚ùå √âCHEC DU SWAP ‚ùå');
      console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
      console.log(`üí• Erreur: ${result.error}`);
      console.log('\nüîß Solutions possibles:');
      console.log('   1. V√©rifiez que vous avez suffisamment d\'ETH pour les gas fees');
      console.log('   2. R√©duisez le montant √† swapper');
      console.log('   3. Augmentez le slippage (conditions de march√© volatiles)');
      console.log('   4. V√©rifiez que le pool a suffisamment de liquidit√©');
    }
    */

    console.log('\nüìã Instructions pour ex√©cuter le swap:');
    console.log('1. üìù √âditez ce fichier: quick-usdc-to-eth-swap.ts');
    console.log('2. üîì D√©commentez les lignes 74-116 (section /* ... */)');
    console.log('3. üíæ Sauvegardez le fichier');
    console.log('4. üöÄ Relancez: npm run quick-usdc-eth-swap');
    console.log('\n‚ö†Ô∏è  Assurez-vous d\'avoir des ETH pour les gas fees!');

  } catch (error) {
    console.error('\n‚ùå ERREUR CRITIQUE:', error);
    console.log('\nüîß V√©rifiez:');
    console.log('   ‚Ä¢ Votre connexion Internet');
    console.log('   ‚Ä¢ Les variables d\'environnement (.env)');
    console.log('   ‚Ä¢ La cl√© API Circle');
    console.log('   ‚Ä¢ L\'existence du wallet "newSet"');
  }
}

// Informations utiles
async function showInfo() {
  console.log('\nüìö Informations Uniswap Base Sepolia:');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log(`üåê R√©seau: Base Sepolia (Chain ID: ${UNISWAP_BASE_CONFIG.CHAIN_ID})`);
  console.log(`ü¶Ñ Swap Router: ${UNISWAP_BASE_CONFIG.SWAP_ROUTER}`);
  console.log(`üí∞ USDC: ${UNISWAP_BASE_CONFIG.USDC}`);
  console.log(`‚ö° WETH: ${UNISWAP_BASE_CONFIG.WETH}`);
  console.log(`üîç Explorer: ${UNISWAP_BASE_CONFIG.EXPLORER}`);
  
  console.log('\nüîó Liens utiles:');
  console.log('   ‚Ä¢ Base Sepolia Faucet: https://www.coinbase.com/faucets/base-ethereum-sepolia-faucet');
  console.log('   ‚Ä¢ Uniswap App: https://app.uniswap.org/#/swap');
  console.log('   ‚Ä¢ Base Sepolia Explorer: https://sepolia.basescan.org');
  
  console.log('\nüí° Pour obtenir des tokens de test:');
  console.log('   1. Utilisez le faucet Base Sepolia pour obtenir des ETH');
  console.log('   2. Swappez une partie des ETH contre des USDC sur Uniswap');
  console.log('   3. Utilisez ensuite ce script pour retourner vers ETH');
}

async function main() {
  await realUSDCToETHSwap();
  await showInfo();
}

main().catch(console.error); 